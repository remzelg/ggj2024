* Game Design Doc: Stand Up Show Down
** Scenes
*** MainMenu.tscn
The main menu should start with splash menu.
Start button should transition to the connectUsers scene.
Settings should transition to a in-scene settings menu, hiding the splashmenu.
Quit quits the application.
**** Nodes
***** Background
***** SplashMenu
****** Buttons (in a vbox and/or margin)
****** Title (anim possibly)

****** (Animated elements optionally)
***** SettingsMenu
****** Setting sliders/ buttons (in vbox / margins)
***** AudioStreamPlayer
**** Scripts
***** MainMenu.gd
In charge of event listeners for the splashMenu and settings buttons, and switching to the CharacterSelect scene
*** CharacterSelectMenu.tscn
The character select scene has a prompt for players to join the game session, and to select a character to play.
Also displays a short description and stat breakdown.
**** Nodes
***** Background
***** CharacterScreens
****** CharacterSelect.tscn (x4)
******* ProfileArt
******* JoinLabel
******* Statpreview
******* CharacterDescription
***** StartButton
**** Scripts
***** CharacterSelectMenu.gd
Should initialize signals from the character select subscenes to undisable the startbutton, and connect DeviceInput devices to them when users join.
Should set singleton PlayerController.gd values before transitioning to the GameController scene.
***** CharacterSelect.gd
Should take the initialized and/or exported device int and use that to listen for player inputs.
Should start with everything hidden except #JoinLabel.
*** GameController.tscn
The Game Controller is a ControlNode inherited class node, which is a holder for both the background/overworld as well as the theater.
**** Nodes
***** Overworld (canvas item)
****** Background
****** locations
******* Location.tscn x?
****** Pawns
******* Pawn.tscn x2-4 (initialized at runtime)
***** Theater.tscn
**** Scripts
***** GameController.gd
This will likely be a very large file.
It should:
- Initialize the pawns
- Handle turn resolution
- Interact with both the Theater and the Showdown scenes
- handle updates to the player resources (adding jokes and causing stat effects)

*** Theater.tscn
The theater scene is a pop up panel with a area for splash art and actor sprites and then an interactable dialogue box.
it spawns when a player confirms their location selection
**** Nodes
 
*** Location.tscn
*** Showdown.tscn
The third and final "main" scene. it is stage with the player actor sprites on it in front of an audience, and with ui elements that convey the game state for the showdown.
**** Nodes
***** Background
***** UI
****** PopularityMeter
****** ActionSelectPanel
******* OptionButton
****** TurnOrderIndicator
****** PlayerCards
***** Audience (animation sprites)
***** PlayerActors

*** Pawn.tscn
the pawn that moves around the overworld
*** ToolTip.tscn
a multipurpose tool tip that should load info and go visible on hover
** Singletons
*** PlayerManager.gd
manages which players use which devices, and also correlate player id to a player tres object file
*** GameSettings.gd
** Resources
*** Player.tres
resource that holds a given player's stats, jokes, and character name
*** TheaterEvent.tres
Resource that either runs every time a location is chosen, or has a conditional chance of occuring
also can hold information such as a stat requirement for dialogue tree options
*** DescisionEffect.tres
Resource that is loaded so the GameController knows how to affect a player's stats or joke repetoire
*** TheaterActorMap.tres
Resource that correlates sprites to keywords and character names in order to easily recall them during dialogue or showdown rendering
*** Showdown/Joke.tres
Resource that has the text of a joke to be read out during the showdown, and any references to other tres files that are relevant.
*** Showdown/BoardState.tres
Resource that can add temporary modifications to the player resources witohut permanently changing them
